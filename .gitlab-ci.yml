stages:
  - build
  - package
  - release

variables:
  PROJECT_NAME: "asp-eks"
  VERSION: "${CI_COMMIT_TAG}" # Assumes tags trigger release

build:
  stage: build
  image: golang:1.21
  script:
    - mkdir -p dist
    - |
      for GOOS in darwin linux windows; do
        for GOARCH in amd64 arm64; do
          BIN_NAME="$PROJECT_NAME"
          [ "$GOOS" == "windows" ] && BIN_NAME="$PROJECT_NAME.exe"
          OUTPUT="dist/${PROJECT_NAME}_${VERSION}_${GOOS}_${GOARCH}"
          mkdir -p "$OUTPUT"
          GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-s -w" -o "$OUTPUT/$BIN_NAME" ./main.go
          cp LICENSE README.md "$OUTPUT/"
        done
      done
  artifacts:
    paths:
      - dist/

package:
  stage: package
  image: alpine:latest
  script:
    - apk add --no-cache zip sha256sum
    - cd dist
    - |
      for DIR in */; do
        ZIP_NAME="${DIR%/}.zip"
        zip -r "$ZIP_NAME" "$DIR"
        sha256sum "$ZIP_NAME" >> checksums.txt
      done
  artifacts:
    paths:
      - dist/

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: '$CI_COMMIT_TAG'
  script: []
  release:
    name: "$CI_COMMIT_TAG"
    tag_name: "$CI_COMMIT_TAG"
    description: "Release $CI_COMMIT_TAG"
    assets:
      links:
        - name: Checksums
          filepath: dist/checksums.txt
        - name: Archives
          url: "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/dist/"

